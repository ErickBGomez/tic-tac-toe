:root {
  --black-color: #323232;
  --gray-color: #bebebe;
  --hover-color: #e0e0e0;
  --white-color: #f8f8f8;
  --red-color: #f15e5e;
  --blue-color: #6194e0;
  --purple-color: #ac67e2;

  --turnColorTransition: 0.5s;

  font-size: 28px;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* General elements styling */

body {
  display: grid;
  grid-template-rows: min-content 1fr 120px;
  height: 100vh;
  margin: 0;
  font-family: "Krona One", sans-serif;
  background-color: var(--white-color);
  color: var(--black-color);
}

/* Header */

header {
  display: grid;
  grid-template-columns: 1fr max-content 1fr;
  align-items: center;
  gap: 75px;
}

.header-title {
  font-size: 2rem;
  text-align: center;
  padding: 25px 0;
  user-select: none;
}

.back-button {
  justify-self: end;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 48px;
  height: 48px;
  border-radius: 100%;
  cursor: pointer;
}

.back-button:hover {
  background-color: var(--hover-color);
}

.back-button path {
  stroke: var(--black-color);
}

.back-button.hide {
  visibility: hidden;
}

/* Scenes (general) */

.scenes {
  align-self: center;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.scenes > div {
  display: none;
}

.scene-title {
  font-size: 1rem;
}

.vertical-divisor path {
  stroke: var(--black-color);
}

.vertical-divisor circle {
  fill: var(--black-color);
}

.select-opponent-scene.open,
.select-symbol-scene.open {
  display: grid;
  grid-template-rows: 100px max-content 100px;
  justify-items: center;
}

/* Select symbol scene */

.symbols-container,
.opponents-container {
  display: flex;
  align-items: center;
  gap: 100px;
}

.select-x-symbol,
.select-o-symbol {
  cursor: pointer;
}

.select-x-symbol path,
.select-o-symbol circle {
  stroke: var(--black-color);
  transition: stroke 200ms;
}

.select-x-symbol:hover path {
  stroke: var(--red-color);
  transition: stroke 200ms;
}

.select-o-symbol:hover circle {
  stroke: var(--blue-color);
  transition: stroke 200ms;
}

/* Select opponent scene */

.select-human-player,
.select-computer {
  cursor: pointer;
}

.select-human-player path,
.select-computer path {
  fill: var(--black-color);
  transition: fill 200ms;
}

.select-human-player:hover path {
  fill: var(--blue-color);
  transition: fill 200ms;
}

.select-computer:hover path,
.select-computer.active path {
  fill: var(--purple-color);
  transition: fill 200ms;
}

.select-computer {
  position: relative;
}

.difficulty-container {
  position: absolute;
  display: none;
  justify-content: space-between;
  width: 190px;
  left: 5px;
  top: 80px;
  font-size: 0.8rem;
  color: var(--gray-color);
  cursor: default;
}

.easy-difficulty,
.hard-difficulty {
  cursor: pointer;
}

.easy-difficulty:hover {
  color: var(--blue-color);
}

.hard-difficulty:hover {
  color: var(--red-color);
}

.select-computer.active .difficulty-container {
  display: flex;
}

.small-vertical-divisor {
  width: 3px;
  height: 27px;
  background-color: var(--gray-color);
}

/* Game scene */

.game-scene.open {
  display: grid;
  justify-items: center;
  align-items: center;
  grid-template-rows: 1fr max-content 1fr;
  gap: 60px;
}

.rounds-container {
  align-self: end;
}

.game-board {
  display: grid;
  grid-template-columns: repeat(3, 125px);
  grid-template-rows: repeat(3, 125px);
}

.board-cell {
  --board-border: 2px solid var(--black-color);
  display: flex;
  justify-content: center;
  align-items: center;
}

.board-cell:nth-child(2),
.board-cell:nth-child(5),
.board-cell:nth-child(8) {
  border-left: var(--board-border);
  border-right: var(--board-border);
}

.board-cell:nth-child(4),
.board-cell:nth-child(5),
.board-cell:nth-child(6) {
  border-top: var(--board-border);
  border-bottom: var(--board-border);
}

.game-board .x-symbol path,
.game-board .o-symbol circle {
  stroke: var(--gray-color);
  transition: var(--turnColorTransition);
}

.game-board[data-turn="X"] .x-symbol path,
.board-cell.round-won .x-symbol path {
  stroke: var(--red-color);
  transition: var(--turnColorTransition);
}

.game-board[data-turn="O"] .o-symbol circle,
.board-cell.round-won .o-symbol circle {
  stroke: var(--blue-color);
  transition: var(--turnColorTransition);
}

.game-board[data-computer="X"][data-turn="X"] .x-symbol path,
.game-board[data-computer="X"] .board-cell.round-won .x-symbol path,
.game-board[data-computer="O"][data-turn="O"] .o-symbol circle,
.game-board[data-computer="O"] .board-cell.round-won .o-symbol circle {
  stroke: var(--purple-color);
  transition: var(--turnColorTransition);
}

.horizontal-divisor {
  width: 40px;
  height: 2px;
  background-color: var(--black-color);
}

.game-state {
  display: flex;
  align-items: center;
  gap: 70px;
}

.turn-symbols {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
  user-select: none;
}

.turn-symbols .turn-label {
  font-size: 0.6rem;
}

.score-label {
  font-size: 1.8rem;
  width: 50px;
  height: 50px;
  text-align: center;
}

.turn-symbols .turn-label,
.score-label {
  color: var(--gray-color);
}

.turn-symbols path,
.turn-symbols circle {
  stroke: var(--gray-color);
}

.turn-symbols.x-symbol.active path {
  stroke: var(--red-color);
}

.turn-symbols.x-symbol.active .turn-label,
.turn-symbols.x-symbol.winning .turn-label,
.turn-symbols.x-symbol.winning .score-label {
  color: var(--red-color);
}

.turn-symbols.o-symbol.active circle {
  stroke: var(--blue-color);
}

.turn-symbols.o-symbol.active .turn-label,
.turn-symbols.o-symbol.winning .turn-label,
.turn-symbols.o-symbol.winning .score-label {
  color: var(--blue-color);
}

.game-state[data-computer="X"] .turn-symbols.x-symbol.active path,
.game-state[data-computer="O"] .turn-symbols.o-symbol.active circle {
  stroke: var(--purple-color);
}

.game-state[data-computer="X"] .turn-symbols.x-symbol.active .turn-label,
.game-state[data-computer="X"] .turn-symbols.x-symbol.winning .turn-label,
.game-state[data-computer="X"] .turn-symbols.x-symbol.winning .score-label,
.game-state[data-computer="O"] .turn-symbols.o-symbol.active .turn-label,
.game-state[data-computer="O"] .turn-symbols.o-symbol.winning .turn-label,
.game-state[data-computer="O"] .turn-symbols.o-symbol.winning .score-label {
  color: var(--purple-color);
}

.game-state[data-score="false"] svg,
.game-state[data-score="true"] .score-label {
  display: block;
}

.game-state[data-score="true"] svg,
.game-state[data-score="false"] .score-label {
  display: none;
}

footer {
  align-self: end;
  padding: 10px;
  text-align: center;
  font-size: 0.4rem;
}

a,
a:visited {
  color: var(--black-color);
  font-size: 0.5rem;
  text-decoration: none;
  transition: color 0.15s;
}

a:hover {
  color: var(--blue-color);
  transition: color 0.15s;
}

.turn-symbols.x-symbol path,
.select-x-symbol path,
.board-cell.inserted .x-symbol path {
  animation-name: crossAnim;
  animation-duration: 0.7s;
  animation-timing-function: cubic-bezier(0.7, 0, 0.3, 1);
}

.turn-symbols.o-symbol circle,
.select-o-symbol circle,
.board-cell.inserted .o-symbol circle {
  animation-name: circleAnim;
  animation-duration: 0.7s;
  animation-timing-function: cubic-bezier(0.7, 0, 0.5, 1);
}

@keyframes crossAnim {
  0% {
    stroke-dasharray: 0 80;
  }

  100% {
    stroke-dasharray: 80;
  }
}

@keyframes circleAnim {
  0% {
    stroke-dasharray: 0 200;
  }

  100% {
    stroke-dasharray: 200;
  }
}
